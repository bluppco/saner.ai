---

// IMPORT ASTRO ATOMS
import HeadingThree from "@/atoms/atoms-shiva/headings/three/index.astro"
import HeadingTwo from "@/atoms/atoms-shiva/headings/two/index.astro"

// IMPORT ASTRO COMPONENT
import Navigation from "@/components/home/how-it-works/navigation/index.astro"

// GET ASTRO PROPS
const {

    category_one,
    category_two,
    image_source_one,
    image_source_two,
    subtitle_one,
    title,

} = Astro.props

---

<div class="flex flex-col gap-6">
    <div>
        <HeadingTwo>{ title }</HeadingTwo>
    </div>
    <div>
        <HeadingThree>{ subtitle_one }</HeadingThree>
    </div>
    <nav class="fifth-section-nav flex flex-col items-center justify-center md:flex-row gap-4">
        <div class="flex-1" data-image-index="1">
            <Navigation>{ category_one }</Navigation>
        </div>
        <div class="flex-1" data-image-index="2">
            <Navigation>{ category_two }</Navigation>
        </div>
    </nav>
    <div class="relative image-container-five">
        <div class="fifth-section-content rounded-3xl hidden">
            <img 
                alt="" 
                class="rounded-3xl" 
                src={ image_source_one } 
            />
        </div>
        <div class="fifth-section-content rounded-3xl hidden">
            <img 
                alt="" 
                class="rounded-3xl" 
                src={ image_source_two } 
            />
        </div>
    </div>
</div>

<script>
    const imageContainers = document.querySelectorAll('.image-container-five .fifth-section-content');
    const navItems = document.querySelectorAll('.fifth-section-nav div');
    let previouslyHoveredIndex = 1; // TRACK THE PREVIOUSLY HOVERED NAV ITEM INDEX STARTING WITH THE FIRST IMAGE
  
    navItems.forEach((navItem) => {
        navItem.addEventListener('mouseover', (event) => {
            // FIND THE CLOSEST DIV THAT HAS THE DATA_IMAGE_INDEX
            const targetNavItem = event.target.closest('div[data-image-index]');
            if (targetNavItem) {
                const imageIndex = targetNavItem.dataset.imageIndex;
        
                // ONLY UPDATE IF THE HOVERED INDEX IS DIFFRENT FROM THE PREVIOUSLY HOVERED INDEX
                if (imageIndex != previouslyHoveredIndex) {
                    // HIDE ALL IMAGES
                    imageContainers.forEach((imageContainer) => {
                        imageContainer.classList.add('hidden');
                    });
        
                    // SHOW THE MATCHING IMAGE AND REMEMBER HOVERED INDEX
                    imageContainers[imageIndex - 1].classList.remove('hidden');
                    previouslyHoveredIndex = imageIndex;
                }
            }
        });
    });
  
    // INITIALLY LOAD FIRST IMAGE
    if (imageContainers.length > 0) {
        imageContainers[0].classList.remove('hidden');
    }
</script>
